= nested_form_for @proposal, :html => {:class => 'form-horizontal'} do |f|
  - if @proposal.errors.any?
    #error_explanation
      %h2= "#{pluralize(@proposal.errors.count, "error")} prohibited this proposal from being saved:"
      %ul
        - @proposal.errors.full_messages.each do |msg|
          %li= msg

  %fieldset
    .control-group
      = f.label :statement, :class => 'control-label'
      .controls
        = f.text_field :statement, :class => 'input-xxlarge', placeholder: 'Enter only the statement of your proposal'

    = f.fields_for :hub, @proposal.hub do |hub_form|
      .control-group
        = hub_form.label :group_name, :class => 'control-label'
        .controls
          = hub_form.hidden_field :group_name, placeholder: 'Please choose the word or phrase that best captures this proposal', data: {location_input: '#proposal_hub_formatted_location', location_id: '#proposal_hub_location_id'}

      .control-group
        = hub_form.label :location_id, :class => 'control-label'
        .controls
          = hub_form.text_field :formatted_location, :name => '', :class => 'input-xxlarge gpSearchBox', placeholder: 'Please enter the geography to which this proposal applies'
          %i.clear-location.icon-remove-circle.hide
          -#  Setting the name to nil as we do not need the formatted_location string for creating a proposal.
          -#  The location_id is sufficient to derive a unique location.
          = hub_form.hidden_field :location_id

    = f.fields_for :votes, @vote do |vote_form|
      .control-group
        = vote_form.label :vote, 'Supporting Arguments', :class => 'control-label'
        .controls
          = vote_form.text_area :comment, :class => 'input-xxlarge supporting-args', placeholder: 'Enter your explanation and reasons why others should support your proposal'

    .control-group
      .controls
        = f.submit controller.action_name == 'new' ? 'Create' : 'Update', class: 'btn btn-primary btn-large btn-bold'
