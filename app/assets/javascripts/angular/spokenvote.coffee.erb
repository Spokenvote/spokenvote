setupApp = (routeProvider, locationProvider, httpProvider) ->
  httpProvider.defaults.headers.post['X-CSRF-Token'] = $('meta[name=csrf-token]').attr('content')
  locationProvider.html5Mode true

  routeProvider
    .when '/',
      templateUrl: "<%= asset_path('landing.html.haml') %>"
      controller: 'DashboardCtrl'

    .when '/login',
      controller: 'RootCtrl'
      resolve:
        loadModal: () ->
          angular.element("#voteModal").modal("show")

    .when '/newvote',
      controller: 'VoteNewCtrl'
      resolve:
        loadModal: -> angular.element("#voteModal").modal("show")

    .when '/newgroup',
      controller: 'HubsCtrl'
      resolve:
        loadModal: ->
          $modal
            template: '/assets/hubs/_new_hub_modal.html.haml'
            show: true
            backdrop: 'static'
            scope: $scope

    .when '/hubs',
      templateUrl: "/hubs"

    .when '/proposals',
      templateUrl: "<%= asset_path('proposals/index.html.haml') %>"
      controller: 'ProposalListCtrl'
      resolve:
        proposals: (MultiProposalLoader) ->
          MultiProposalLoader()
        current_user: (CurrentUserLoader) ->
          CurrentUserLoader()

    .when '/proposals/:proposalId',
      templateUrl: "<%= asset_path('proposals/show.html.haml') %>"
      controller: 'ProposalViewCtrl'
      resolve:
        proposal: (ProposalLoader) ->
          ProposalLoader()
        current_user: (CurrentUserLoader) ->
          CurrentUserLoader()

    .when '/currentuser',
      resolve:
        proposals: (CurrentUserLoader) ->
          CurrentUserLoader()

    .otherwise
      template: '<h3>Whoops, page not found</h3>'

setupApp.$inject = ['$routeProvider', '$locationProvider', '$httpProvider']
window.angularApp = angular.module('spokenvote', ['spokenvote.services', 'spokenvote.directives', '$strap.directives', 'ui']).config(setupApp)

setupServices = ($httpProvider) ->
  $httpProvider.responseInterceptors.push('errorHttpInterceptor')

setupServices.$inject = ['$httpProvider']
services = angular.module('spokenvote.services', ['ngResource', 'ngCookies']).config(setupServices)

directives = angular.module('spokenvote.directives', [])


SessionSettings = ->
  defaultGravatar: 'http://www.spokenvote.com/' + "<%= DEFAULT_AVATAR_URL %>"

services.factory 'SessionSettings', SessionSettings

